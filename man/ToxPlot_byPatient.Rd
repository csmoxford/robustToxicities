% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ToxPlot_byPatient.R
\name{ToxPlot_byPatient}
\alias{ToxPlot_byPatient}
\title{Plot patients worst grade over time}
\usage{
ToxPlot_byPatient(rt, rowID_range = NULL, plot = TRUE,
  plotLeftSideOption = "treatment", xlim = c(-7, 60), xlab = character(0),
  plotCycleLength = 21, plotXLegendScale = "days", permitMarSet = TRUE,
  events = list(), offsetEvent = NULL)
}
\arguments{
\item{rt}{an object of class robustToxicities}

\item{rowID_range}{optional, a length 2 vector detailing the minimum and maximum row to plot}

\item{plot}{whether to plot the graph or return the number of rows to plot}

\item{plotLeftSideOption}{What to display on right axis. Options are: "treatment", "patid" or "both". Default is "treatment"}

\item{xlim}{Range to plot on xaxis. Default is c(-7,60)}

\item{xlab}{xaxis title / label}

\item{plotCycleLength}{Cycle length is used to add greater highlights to vertical lines. Default is 21}

\item{plotXLegendScale}{What scale to use on xaxis. Options are "days","weeks","months". Default is "days"}

\item{permitMarSet}{Allow the function to set the mar for the plot}

\item{events}{a list of Objects of type eventInfo.}

\item{offsetEvent}{the name of a column in patientData to use as time 0. If not provided the start of assessment date is used}
}
\value{
This plot function return the number of row of unique toxicities * patients. This assists in computing optimal size for saved graphs.

#' @seealso \code{\link{ToxPlot_byToxicity}}, \code{\link{ToxPlot_byTime}}, \code{\link{ToxPlot_byCycle}}
}
\description{
This function plots the worst grade adverse event for each patient over time.
}
\examples{
# Patient Level Data
data("rt_patientData")
# Toxicity Level Data
data("rt_toxicityData")


# Run the setup command passing in all the column names.
rt = SetupRobustToxicities(
  toxData = rt_toxicityData,
  patientData = rt_patientData,
  patidCol = "patientNo", treatmentCol = "Treatment",
  toxCategoryCol = "category", toxNameCol = "toxicity",
  toxGradeCol = "grade", dateOfStartOfToxWindow = "Registration_date",
  dateOfStartTox = "ae_onset_date", dateOfEndTox = "ae_resolve_date",
  dateOfEndOfToxWindow = "end_of_assessment_date",
  periodDividerCols = c("Registration_date", "Cycle_1_date","Cycle_2_date",
                        "Cycle_3_date", "Cycle_4_date", "Cycle_5_date", "Cycle_6_date"),
  periodDividerLabels = c("Pre treatment", "Cycle 1","Cycle 2",
                          "Cycle 3","Cycle 4","Cycle 5", "Cycle 6"),
  treatmentCodes = NULL, treatmentLabels = NULL, options = NULL)

# Look for queries. Note: must be called before running any
# of the functions on this class.
rt = QueryRobustToxicities(rt)

##########################################################
ToxPlot_byPatient(rt)


##########################################################
# Subset to a range. Usefull for plotting over a number of figures if there
# are lots of adverse events
ToxPlot_byPatient(rt, rowID_range = c(1,3), plotLeftSideOption = "both")

##########################################################
# subset to a specific set of adverse events
rt@toxData$ass_TRUE = rt@toxData$toxicity == "Headache"
ToxPlot_byPatient(rt)


#########################################################
# Add event data
rt@toxData$ass_TRUE = TRUE

event_EOT = ToxPlot_eventInfo(
  columns = c("end_of_treatment_date"),
  label = c("End Of Treatment"),
  lwd = 4,
  col = c("blue")
)

event_EOA = ToxPlot_eventInfo(
  columns = c("end_of_assessment_date"),
  label = c("End Of Assessment"),
  lwd = 4,
  col = c("green")
)
ToxPlot_byPatient(rt)
ToxPlot_byPatient(rt,
                  xlim = c(-7, 100),
                  events = list(event_EOT, event_EOA))

#########################################################
# Change offset event
event_SOT = ToxPlot_eventInfo(
  columns = c("Registration_date"),
  label = c("Registration Date"),
  lwd = 4,
  col = c("orange")
)

ToxPlot_byPatient(rt,
                  xlim = c(-67, 40),
                  xlab = "Days from end of treatment",
                  events = list(event_SOT, event_EOT, event_EOA),
                  offsetEvent = "end_of_treatment_date")
}
